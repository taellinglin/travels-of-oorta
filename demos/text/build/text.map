Archive member included to satisfy reference by file (symbol)

C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o)
                              text.o (irq_init)
C:/devkitPro/libtonc/lib\libtonc.a(tonc_text.o)
                              text.o (txt_init_std)
C:/devkitPro/libtonc/lib\libtonc.a(tonc_text_oam.o)
                              text.o (txt_init_obj)
C:/devkitPro/libtonc/lib\libtonc.a(tonc_bios.o)
                              text.o (VBlankIntrWait)
C:/devkitPro/libtonc/lib\libtonc.a(tonc_isr_master.o)
                              C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o) (isr_master)
C:/devkitPro/libtonc/lib\libtonc.a(tonc_memset.o)
                              C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o) (memset32)
C:/devkitPro/libtonc/lib\libtonc.a(toncfont.o)
                              C:/devkitPro/libtonc/lib\libtonc.a(tonc_text.o) (toncfontTiles)
c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libg.a(lib_a-init.o)
                              c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o (__libc_init_array)
c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(malloc_vars.o)
                              c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o (fake_heap_end)

Allocating common symbols
Common symbol       size              file

__isr_table         0x78              C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o)
__txt_base          0x20              C:/devkitPro/libtonc/lib\libtonc.a(tonc_text.o)
txt_lut             0x100             C:/devkitPro/libtonc/lib\libtonc.a(tonc_text.o)

Discarded input sections

 .text          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .data          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .bss           0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .text          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crti.o
 .data          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crti.o
 .bss           0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crti.o
 .text          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
 .data          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
 .bss           0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
 .data.__dso_handle
                0x0000000000000000        0x4 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
 .text          0x0000000000000000        0x0 soundbank.bin.o
 .data          0x0000000000000000        0x0 soundbank.bin.o
 .bss           0x0000000000000000        0x0 soundbank.bin.o
 .text          0x0000000000000000       0x40 text.o
 .data          0x0000000000000000        0x0 text.o
 .bss           0x0000000000000000        0x0 text.o
 .data          0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o)
 .bss           0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o)
 .bss           0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_text.o)
 .data          0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_text_oam.o)
 .bss           0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_text_oam.o)
 .data          0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_bios.o)
 .bss           0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_bios.o)
 .text          0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_isr_master.o)
 .data          0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_isr_master.o)
 .bss           0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_isr_master.o)
 .data          0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_memset.o)
 .bss           0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_memset.o)
 .text          0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(toncfont.o)
 .data          0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(toncfont.o)
 .bss           0x0000000000000000        0x0 C:/devkitPro/libtonc/lib\libtonc.a(toncfont.o)
 .text          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libg.a(lib_a-init.o)
 .data          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libg.a(lib_a-init.o)
 .bss           0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libg.a(lib_a-init.o)
 .text          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(malloc_vars.o)
 .data          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(malloc_vars.o)
 .bss           0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(malloc_vars.o)
 .bss.fake_heap_start
                0x0000000000000000        0x4 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(malloc_vars.o)
 .text          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtend.o
 .data          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtend.o
 .bss           0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtend.o
 .text          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtn.o
 .data          0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtn.o
 .bss           0x0000000000000000        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtn.o

Memory Configuration

Name             Origin             Length             Attributes
rom              0x0000000008000000 0x0000000002000000
iwram            0x0000000003000000 0x0000000000008000
ewram            0x0000000002000000 0x0000000000040000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000008000000                __text_start = ORIGIN (rom)
                0x0000000002040000                __eheap_end = (ORIGIN (ewram) + LENGTH (ewram))
                0x0000000003000000                __iwram_start = ORIGIN (iwram)
                0x0000000003008000                __iwram_top = (ORIGIN (iwram) + LENGTH (iwram))
                0x0000000003007fa0                __sp_irq = (__iwram_top - 0x60)
                0x0000000003007f00                __sp_usr = (__sp_irq - 0xa0)
                0x0000000003007ff8                __irq_flags = 0x3007ff8
                0x0000000008000000                . = __text_start

.crt0           0x0000000008000000      0x210
 *(.crt0)
 .crt0          0x0000000008000000      0x210 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
                0x0000000008000000                _start
                0x00000000080000c4                __boot_method
                0x00000000080000c5                __slave_number
                0x00000000080000e0                start_vector
                0x0000000008000210                . = ALIGN (0x4)

.init           0x0000000008000210        0xc
 *(SORT_NONE(.init))
 .init          0x0000000008000210        0x4 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crti.o
                0x0000000008000210                _init
 .init          0x0000000008000214        0x8 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtn.o

.plt            0x000000000800021c        0x0
 *(.plt)
                0x000000000800021c                . = ALIGN (0x4)

.text           0x000000000800021c      0x7c4
 *(EXCLUDE_FILE(*.iwram*) .text*)
 .text.__do_global_dtors_aux
                0x000000000800021c       0x2c c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
 .text.frame_dummy
                0x0000000008000248       0x24 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
 .text.startup  0x000000000800026c      0x10c text.o
                0x000000000800026c                main
 .text          0x0000000008000378      0x354 C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o)
                0x0000000008000378                irq_init
                0x00000000080003bc                irq_set_master
                0x00000000080003e8                irq_set
                0x0000000008000510                irq_add
                0x0000000008000588                irq_delete
                0x000000000800063c                irq_enable
                0x0000000008000684                irq_disable
 .text          0x00000000080006cc       0xd0 C:/devkitPro/libtonc/lib\libtonc.a(tonc_text.o)
                0x00000000080006cc                txt_init_std
                0x0000000008000710                txt_bup_1toX
 .text          0x000000000800079c      0x12c C:/devkitPro/libtonc/lib\libtonc.a(tonc_text_oam.o)
                0x000000000800079c                txt_init_obj
                0x00000000080007f4                obj_putc
                0x0000000008000820                obj_puts
                0x000000000800088c                obj_clrs
 .text          0x00000000080008c8       0x8c C:/devkitPro/libtonc/lib\libtonc.a(tonc_bios.o)
                0x00000000080008c8                SoftReset
                0x00000000080008cc                RegisterRamReset
                0x00000000080008d0                Halt
                0x00000000080008d4                Stop
                0x00000000080008d8                IntrWait
                0x00000000080008dc                VBlankIntrWait
                0x00000000080008e0                Div
                0x00000000080008e4                DivArm
                0x00000000080008e8                Sqrt
                0x00000000080008ec                ArcTan
                0x00000000080008f0                ArcTan2
                0x00000000080008f4                CpuSet
                0x00000000080008f8                CpuFastSet
                0x00000000080008fc                BiosCheckSum
                0x0000000008000900                BgAffineSet
                0x0000000008000904                ObjAffineSet
                0x0000000008000908                BitUnPack
                0x000000000800090c                LZ77UnCompWram
                0x0000000008000910                LZ77UnCompVram
                0x0000000008000914                HuffUnComp
                0x0000000008000918                RLUnCompWram
                0x000000000800091c                RLUnCompVram
                0x0000000008000920                Diff8bitUnFilterWram
                0x0000000008000924                Diff8bitUnFilterVram
                0x0000000008000928                Diff16bitUnFilter
                0x000000000800092c                SoundBias
                0x0000000008000930                SoundDriverInit
                0x0000000008000934                SoundDriverMode
                0x0000000008000938                SoundDriverMain
                0x000000000800093c                SoundDriverVSync
                0x0000000008000940                SoundChannelClear
                0x0000000008000944                MidiKey2Freq
                0x0000000008000948                MultiBoot
                0x000000000800094c                SoundDriverVSyncOff
                0x0000000008000950                SoundDriverVSyncOn
 .text          0x0000000008000954       0x3c C:/devkitPro/libtonc/lib\libtonc.a(tonc_memset.o)
                0x0000000008000954                memset16
 .text.__libc_init_array
                0x0000000008000990       0x50 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libg.a(lib_a-init.o)
                0x0000000008000990                __libc_init_array
 *(.gnu.linkonce.t.*)
 *(.text.*personality*)
 *(.gnu.warning)
 *(.glue_7t)
 .glue_7t       0x00000000080009e0        0x0 linker stubs
 *(.glue_7)
 .glue_7        0x00000000080009e0        0x0 linker stubs
 *(.vfp11_veneer)
 .vfp11_veneer  0x00000000080009e0        0x0 linker stubs
                0x00000000080009e0                . = ALIGN (0x4)
                0x00000000080009e0                __text_end = .

.v4_bx          0x00000000080009e0        0x0
 .v4_bx         0x00000000080009e0        0x0 linker stubs

.iplt           0x00000000080009e0        0x0
 .iplt          0x00000000080009e0        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o

.fini           0x00000000080009e0        0xc
 *(.fini)
 .fini          0x00000000080009e0        0x4 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crti.o
                0x00000000080009e0                _fini
 .fini          0x00000000080009e4        0x8 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtn.o
                0x00000000080009ec                . = ALIGN (0x4)

.rodata         0x00000000080009ec      0x34c
 *(.rodata)
 .rodata        0x00000000080009ec       0x12 text.o
                0x00000000080009ec                hwstr
 *fill*         0x00000000080009fe        0x2 ff
 .rodata        0x0000000008000a00       0x38 C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o)
 .rodata        0x0000000008000a38      0x300 C:/devkitPro/libtonc/lib\libtonc.a(toncfont.o)
                0x0000000008000a38                toncfontTiles
 *all.rodata*(*)
 *(.roda)
 *(.rodata.*)
 *(.gnu.linkonce.r*)
                0x0000000008000d38                . = ALIGN (0x4)

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x0000000008000d38                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x0000000008000d38                __exidx_end = .

.ctors          0x0000000008000d38        0x0
 *crtbegin.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)
                0x0000000008000d38                . = ALIGN (0x4)

.dtors          0x0000000008000d38        0x0
 *crtbegin.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)
                0x0000000008000d38                . = ALIGN (0x4)

.eh_frame       0x0000000008000d38        0x4
 *(.eh_frame)
 .eh_frame      0x0000000008000d38        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
 .eh_frame      0x0000000008000d38        0x4 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtend.o
                0x0000000008000d3c                . = ALIGN (0x4)

.gcc_except_table
                0x0000000008000d3c        0x0
 *(.gcc_except_table)
                0x0000000008000d3c                . = ALIGN (0x4)
                0x0000000008000d3c                __iwram_lma = .

.iwram          0x0000000003000000       0xf0 load address 0x0000000008000d3c
                0x0000000003000000                __iwram_start__ = ABSOLUTE (.)
 *(.iwram .iwram*)
 .iwram         0x0000000003000000       0xa4 C:/devkitPro/libtonc/lib\libtonc.a(tonc_isr_master.o)
                0x0000000003000000                isr_master
 .iwram         0x00000000030000a4       0x4c C:/devkitPro/libtonc/lib\libtonc.a(tonc_memset.o)
                0x00000000030000a4                memset32
 *iwram.*(.text* .data*)
                0x00000000030000f0                . = ALIGN (0x4)
                0x00000000030000f0                __iwram_end__ = ABSOLUTE (.)
                0x0000000008000e2c                __data_lma = (__iwram_lma + SIZEOF (.iwram))

.rel.dyn        0x00000000030000f0        0x0 load address 0x0000000008000e2c
 .rel.iplt      0x00000000030000f0        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o

.bss            0x00000000030000f0      0x1b8
                0x00000000030000f0                __bss_start = ABSOLUTE (.)
                0x00000000030000f0                __bss_start__ = ABSOLUTE (.)
 *(.dynbss)
 *(.gnu.linkonce.b*)
 *(.bss*)
 .bss.completed.1
                0x00000000030000f0        0x1 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
 *fill*         0x00000000030000f1        0x3 
 .bss.object.0  0x00000000030000f4       0x18 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
 .bss.fake_heap_end
                0x000000000300010c        0x4 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(malloc_vars.o)
                0x000000000300010c                fake_heap_end
 *(COMMON)
 COMMON         0x0000000003000110       0x78 C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o)
                0x0000000003000110                __isr_table
 COMMON         0x0000000003000188      0x120 C:/devkitPro/libtonc/lib\libtonc.a(tonc_text.o)
                0x0000000003000188                __txt_base
                0x00000000030001a8                txt_lut
                0x00000000030002a8                . = ALIGN (0x4)
                0x00000000030002a8                __bss_end__ = ABSOLUTE (.)

.data           0x00000000030002a8        0x4 load address 0x0000000008000e2c
                0x00000000030002a8                __data_start__ = ABSOLUTE (.)
 *(.data*)
 .data          0x00000000030002a8        0x4 C:/devkitPro/libtonc/lib\libtonc.a(tonc_text.o)
                0x00000000030002a8                gptxt
 *(.gnu.linkonce.d*)
                0x00000000030002ac                . = ALIGN (0x4)
                0x0000000008000e30                __preinit_lma = (__data_lma + SIZEOF (.data))

.igot.plt       0x00000000030002ac        0x0 load address 0x0000000008000e30
 .igot.plt      0x00000000030002ac        0x0 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o

.preinit_array  0x00000000030002ac        0x0 load address 0x0000000008000e30
                0x00000000030002ac                __preinit_array_start = ABSOLUTE (.)
 *(.preinit_array)
                0x00000000030002ac                __preinit_array_end = ABSOLUTE (.)
                0x0000000008000e30                __init_lma = (__preinit_lma + SIZEOF (.preinit_array))

.init_array     0x00000000030002ac        0x4 load address 0x0000000008000e30
                0x00000000030002ac                __init_array_start = ABSOLUTE (.)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array)
 .init_array    0x00000000030002ac        0x4 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
                0x00000000030002b0                __init_array_end = ABSOLUTE (.)
                0x0000000008000e34                __fini_lma = (__init_lma + SIZEOF (.init_array))

.fini_array     0x00000000030002b0        0x4 load address 0x0000000008000e34
                0x00000000030002b0                __fini_array_start = ABSOLUTE (.)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array)
 .fini_array    0x00000000030002b0        0x4 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
                0x00000000030002b4                __fini_array_end = ABSOLUTE (.)
                0x0000000008000e38                __jcr_lma = (__fini_lma + SIZEOF (.fini_array))

.jcr            0x00000000030002b4        0x0 load address 0x0000000008000e38
 *(.jcr)
                0x00000000030002b4                __data_end__ = ABSOLUTE (.)
                0x0000000008000e38                __iwram_overlay_lma = (__jcr_lma + SIZEOF (.jcr))
                0x00000000030002b4                __iwram_overlay_start = .

.iwram0         0x00000000030002b4        0x0 load address 0x0000000008000e38
 *(.iwram0)
                0x00000000030002b4                . = ALIGN (0x4)
                0x0000000008000e38                PROVIDE (__load_start_iwram0 = LOADADDR (.iwram0))
                0x0000000008000e38                PROVIDE (__load_stop_iwram0 = (LOADADDR (.iwram0) + SIZEOF (.iwram0)))

.iwram1         0x00000000030002b4        0x0
 *(.iwram1)
                0x00000000030002b4                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram1 = LOADADDR (.iwram1))
                [!provide]                        PROVIDE (__load_stop_iwram1 = (LOADADDR (.iwram1) + SIZEOF (.iwram1)))

.iwram2         0x00000000030002b4        0x0
 *(.iwram2)
                0x00000000030002b4                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram2 = LOADADDR (.iwram2))
                [!provide]                        PROVIDE (__load_stop_iwram2 = (LOADADDR (.iwram2) + SIZEOF (.iwram2)))

.iwram3         0x00000000030002b4        0x0
 *(.iwram3)
                0x00000000030002b4                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram3 = LOADADDR (.iwram3))
                [!provide]                        PROVIDE (__load_stop_iwram3 = (LOADADDR (.iwram3) + SIZEOF (.iwram3)))

.iwram4         0x00000000030002b4        0x0
 *(.iwram4)
                0x00000000030002b4                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram4 = LOADADDR (.iwram4))
                [!provide]                        PROVIDE (__load_stop_iwram4 = (LOADADDR (.iwram4) + SIZEOF (.iwram4)))

.iwram5         0x00000000030002b4        0x0
 *(.iwram5)
                0x00000000030002b4                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram5 = LOADADDR (.iwram5))
                [!provide]                        PROVIDE (__load_stop_iwram5 = (LOADADDR (.iwram5) + SIZEOF (.iwram5)))

.iwram6         0x00000000030002b4        0x0
 *(.iwram6)
                0x00000000030002b4                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram6 = LOADADDR (.iwram6))
                [!provide]                        PROVIDE (__load_stop_iwram6 = (LOADADDR (.iwram6) + SIZEOF (.iwram6)))

.iwram7         0x00000000030002b4        0x0
 *(.iwram7)
                0x00000000030002b4                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram7 = LOADADDR (.iwram7))
                [!provide]                        PROVIDE (__load_stop_iwram7 = (LOADADDR (.iwram7) + SIZEOF (.iwram7)))

.iwram8         0x00000000030002b4        0x0
 *(.iwram8)
                0x00000000030002b4                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram8 = LOADADDR (.iwram8))
                [!provide]                        PROVIDE (__load_stop_iwram8 = (LOADADDR (.iwram8) + SIZEOF (.iwram8)))

.iwram9         0x00000000030002b4        0x0
 *(.iwram9)
                0x00000000030002b4                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram9 = LOADADDR (.iwram9))
                [!provide]                        PROVIDE (__load_stop_iwram9 = (LOADADDR (.iwram9) + SIZEOF (.iwram9)))
                0x00000000030002b4                __iwram_overlay_end = .
                0x0000000008000e38                __ewram_lma = (__iwram_overlay_lma + (__iwram_overlay_end - __iwram_overlay_start))
                0x00000000030002b4                __iheap_start = .
                0x0000000002000000                __ewram_start = ORIGIN (ewram)

.ewram          0x0000000002000000        0x0 load address 0x0000000008000e38
 *(.ewram*)
                0x0000000002000000                . = ALIGN (0x4)
                0x0000000002000000                __ewram_end = ABSOLUTE (.)
                0x0000000008000e38                __pad_lma = (__ewram_lma + SIZEOF (.ewram))

.sbss           0x0000000002000000        0x0
                0x0000000002000000                __sbss_start__ = ABSOLUTE (.)
 *(.sbss*)
                0x0000000002000000                . = ALIGN (0x4)
                0x0000000002000000                __sbss_end__ = ABSOLUTE (.)
                0x0000000002000000                __end__ = ABSOLUTE (.)
                0x0000000002000000                __eheap_start = ABSOLUTE (.)

.pad            0x0000000002000000        0x8 load address 0x0000000008000e38
                0x0000000002000000        0x4 LONG 0x52416b64
                0x0000000002000004        0x4 LONG 0x4d
                0x0000000002000008                . = ALIGN (0x4)
                0x0000000008000e40                __rom_end__ = (__pad_lma + SIZEOF (.pad))

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x45
 *(.comment)
 .comment       0x0000000000000000       0x23 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
                                         0x24 (size before relaxing)
 .comment       0x0000000000000023       0x24 text.o
 .comment       0x0000000000000023       0x22 C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o)
                                         0x23 (size before relaxing)
 .comment       0x0000000000000045       0x23 C:/devkitPro/libtonc/lib\libtonc.a(tonc_text.o)
 .comment       0x0000000000000045       0x23 C:/devkitPro/libtonc/lib\libtonc.a(tonc_text_oam.o)
 .comment       0x0000000000000045       0x24 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libg.a(lib_a-init.o)
 .comment       0x0000000000000045       0x24 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(malloc_vars.o)
 .comment       0x0000000000000045       0x24 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtend.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 text.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x57d
 *(.debug_info)
 .debug_info    0x0000000000000000      0x57d text.o

.debug_abbrev   0x0000000000000000      0x2b4
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x2b4 text.o

.debug_line     0x0000000000000000      0x32d
 *(.debug_line)
 .debug_line    0x0000000000000000      0x32d text.o

.debug_frame    0x0000000000000000       0x48
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x48 text.o

.debug_str      0x0000000000000000      0x296
 *(.debug_str)
 .debug_str     0x0000000000000000      0x296 text.o
                                        0x2d8 (size before relaxing)

.debug_loc      0x0000000000000000       0xaf
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0xaf text.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.stack          0x0000000000080000        0x0
                0x0000000000080000                _stack = .
 *(.stack)

.note.gnu.arm.ident
 *(.note.gnu.arm.ident)

.ARM.attributes
                0x0000000000000000       0x2c
 *(.ARM.attributes)
 .ARM.attributes
                0x0000000000000000       0x20 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .ARM.attributes
                0x0000000000000020       0x1c c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crti.o
 .ARM.attributes
                0x000000000000003c       0x2a c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
 .ARM.attributes
                0x0000000000000066       0x14 soundbank.bin.o
 .ARM.attributes
                0x000000000000007a       0x2a text.o
 .ARM.attributes
                0x00000000000000a4       0x2a C:/devkitPro/libtonc/lib\libtonc.a(tonc_irq.o)
 .ARM.attributes
                0x00000000000000ce       0x2a C:/devkitPro/libtonc/lib\libtonc.a(tonc_text.o)
 .ARM.attributes
                0x00000000000000f8       0x2a C:/devkitPro/libtonc/lib\libtonc.a(tonc_text_oam.o)
 .ARM.attributes
                0x0000000000000122       0x1a C:/devkitPro/libtonc/lib\libtonc.a(tonc_bios.o)
 .ARM.attributes
                0x000000000000013c       0x1a C:/devkitPro/libtonc/lib\libtonc.a(tonc_isr_master.o)
 .ARM.attributes
                0x0000000000000156       0x1a C:/devkitPro/libtonc/lib\libtonc.a(tonc_memset.o)
 .ARM.attributes
                0x0000000000000170       0x1a C:/devkitPro/libtonc/lib\libtonc.a(toncfont.o)
 .ARM.attributes
                0x000000000000018a       0x2a c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libg.a(lib_a-init.o)
 .ARM.attributes
                0x00000000000001b4       0x30 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a(malloc_vars.o)
 .ARM.attributes
                0x00000000000001e4       0x30 c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtend.o
 .ARM.attributes
                0x0000000000000214       0x1c c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtn.o

/DISCARD/
 *(.note.GNU-stack)
LOAD c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
LOAD c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crti.o
LOAD c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtbegin.o
LOAD soundbank.bin.o
LOAD text.o
LOAD C:/devkitPro/libgba/lib\libmm.a
LOAD C:/devkitPro/libgba/lib\libgba.a
LOAD C:/devkitPro/libtonc/lib\libtonc.a
START GROUP
LOAD c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb\libgcc.a
LOAD c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libg.a
LOAD c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libc.a
LOAD c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/lib/thumb\libsysbase.a
END GROUP
LOAD c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtend.o
LOAD c:/devkitpro/devkitarm/bin/../lib/gcc/arm-none-eabi/10.2.0/thumb/crtn.o
OUTPUT(C:/devkitPro/examples/gba/homebrew/text/text.elf elf32-littlearm)
LOAD linker stubs

.debug_ranges   0x0000000000000000       0xa8
 .debug_ranges  0x0000000000000000       0xa8 text.o
